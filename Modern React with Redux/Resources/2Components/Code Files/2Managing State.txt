Page - 1: 
class HelloComp extends React.Component {
    constructor() {
        super();
        this.counter = 0;
    }
    incrementCounter = () => {
        console.log("button clicked");
        this.counter += 1;
    };
    render() {
        return (
            <div>
                <button onClick={this.incrementCounter}> Click </button>
                <p>{this.counter}</p>
            </div>
        );
    }
}



Page - 3: 
class HelloComp extends React.Component {
    constructor() {
        super();
        //this.counter = 0; //added to state now!
        this.state = { // state should be assigned an Object Literal with relevant attributes
            counter: 0
        };
    }
    incrementCounter = () => {
        this.state.counter += 1; // trying to increment(or mutate) the state! //not possible!
        console.log("Button Clicked," , this.state.counter, "times" );
    };
    render() {
        return (
            <div>
                <button onClick={this.incrementCounter}> Click </button>
                <p>{this.state.counter}</p>
            </div>
        );
    }
}

this.state = {
    counter:0,
    flag:true,
    ...      ,
    ...
}

Page - 4: 
class HelloComp extends React.Component {
    constructor() {
        super();
        this.state = {
            counter: 0
        };
    }
    incrementCounter = () => {
        //this.state.counter += 1;  //trying to increment(or mutate) the state!
        this.setState({counter : this.state.counter + 1 }) //updating state using setState()
        console.log("Button Clicked," , this.state.counter, "times" );
    };
    render() {
        return (
            <div>
                <button onClick={this.incrementCounter}> Click </button>
                <p>{this.state.counter}</p>
            </div>
        );
    }
}



Page - 5:
incrementCounter = () => {
        this.setState({counter : this.state.counter + 1 });
        this.setState({counter : this.state.counter + 1 }); //trying to use the updated state
        this.setState({counter : this.state.counter + 1 }); //trying to use the updated state again
        console.log("Button Clicked," , this.state.counter, "times" );
};

incrementCounter = () => {
        this.setState({counter : this.state.counter + 1 });
        this.setState((prevState) => {
            return {counter: prevState.counter + 1}
        });
        this.setState((prevState) => {
            return {counter: prevState.counter + 1}
        });
        console.log("Button Clicked," , this.state.counter);
};


Page - 6: 
import React, { Component } from 'react';
class StateDemo extends Component {
    state = {
        counter: 0,
        message:"" 
    };
    incrementCounter = () => {
        this.setState({counter:this.state.counter+1 , message:"Button clicked"})
    };
    render() {
        return (
            <div>
                <br/>&nbsp;&nbsp;&nbsp;
                <button className="btn btn-primary btn-lg" onClick={this.incrementCounter}> Click </button>
                <p>&nbsp;&nbsp;&nbsp;{this.state.message} {this.state.counter} times</p>
            </div>
        );
    }
}
export default StateDemo;

import React from 'react';
import ReactDOM from 'react-dom';
import 'bootstrap/dist/css/bootstrap.min.css';
import StateDemo from './stateDemo';
ReactDOM.render(<StateDemo></StateDemo>, document.getElementById('root'));


Page - 7:  
Step 1: Modify the Employee.js component as shown below:

import React from "react";
import image1 from './Jack.jpg';
import image2 from './Jill.jpg';
const emp1 = {
  empId: 100,
  empName: "Jack",
  age: 30,
  salary: 50000,
  image: image1,
  achievements: "Has got 3 bravo awards and 1 MVP award. Has worked on cutting edge technologies as well"
};
const emp2 = {
  empId: 101,
  empName: "Jane",
  age: 24,
  salary: 40000,
  image: image2,
  achievements: "No major achievements so far"
};
class Employee extends React.Component {
  empArr = [emp1, emp2];
  state = { selectedEmp: null };
  createCard(emp) {
    var note = null;
    var achievements = null;
    if (emp.age < 25) {
      note = <span className="text-info"> - Fresher</span>
    }
    if (this.state.selectedEmp === emp.empId) {
      achievements = <p><i>{emp.achievements}</i></p>
    }
    return (
      <div key={emp.empId} className="card" style={{ "width": 200 }}>
        <img className="card-img-top" src={emp.image} height="200" alt="Card cap" />
        <div className="card-body">
          <h5 className="card-title text-center">{emp.empName}</h5>
          <p className="card-text">
            <span>Id: {emp.empId}</span><br />
            <span>Age: {emp.age}</span> {note}<br />
            <span>Salary: {emp.salary}</span><br />
          </p>
          {achievements}
          <button type="button" className="btn btn-primary">Edit</button>
          <button className="btn btn-success" onClick={() => {
            this.setState({ selectedEmp: emp.empId })
          }}>View</button>
        </div>
      </div>
    )
  }
  render() {
    return (
      <div>
        <h3 className="text-center text-primary">Employee Details</h3>
        <div className="row">
          {this.empArr.map(emp => { return this.createCard(emp) })}
        </div>
      </div>
    )
  }
}
export default Employee;
 // getNumber([...numbArray,Math.floor(Math.random() * 10)])
